// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom Coded UI-Test-Generator generiert.
//      Version: 15.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      Coded UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject2
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// as
        /// </summary>
        public void @as()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfText uIAforbeginnersText = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfText uIAforbeginnersText1 = this.UIMainWindowWindow.UIItemCustom1.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfEdit uIPART_TextBoxEdit = this.UIMainWindowWindow.UIItemCustom2.UIDtpStartDatePicker.UIPART_TextBoxEdit;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(29, 3));

            // Doppelklicken "Bücher" Schaltfläche
            Mouse.DoubleClick(uIBücherButton, new Point(59, 6));

            // Klicken "A# for beginners" Bezeichnung
            Mouse.Click(uIAforbeginnersText, new Point(77, 12));

            // Klicken "A# for beginners" Bezeichnung
            Mouse.Click(uIAforbeginnersText1, new Point(77, 12));

            // Klicken "PART_TextBox" Textfeld
            Mouse.Click(uIPART_TextBoxEdit, new Point(73, 6));
        }

        private WpfText uiListElement;

        /// <summary>
        /// Positivtest1 - Verwenden Sie "Positivtest1Params", um Parameter an diese Methode zu übergeben.
        /// </summary>
        ///
        ///
        /// 
        public void Positivtest1()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfText uIAforbeginnersText = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfText uIAforbeginnersText1 = this.UIMainWindowWindow.UIItemCustom1.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfDatePicker uIDtpStartDatePicker = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpStartDatePicker;
            WpfDatePicker uIDtpEndDatePicker = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpEndDatePicker;
            WpfComboBox uICbxKundeComboBox = this.UIMainWindowWindow.UIScrollViewerPane.UICbxKundeComboBox;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIGespeichertText1 = this.UIMainWindowWindow.UIItemCustom2.UIGespeichertText.UIGespeichertText1;
            WpfButton uIZurückButton = this.UIMainWindowWindow.UIScrollViewerPane.UIZurückButton;
            WpfText uIAforbeginnersText2 = this.UIMainWindowWindow.UIItemCustom3.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfDatePicker uIDtpStartDatePicker1 = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpStartDatePicker1;
            WpfDatePicker uIDtpEndDatePicker1 = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpEndDatePicker1;
            WpfEdit uIPART_TextBoxEdit = this.UIMainWindowWindow.UIItemCustom4.UIDtpEndDatePicker.UIPART_TextBoxEdit;
            WpfComboBox uICbxKundeComboBox1 = this.UIMainWindowWindow.UIScrollViewerPane.UICbxKundeComboBox1;
            WpfButton uISpeichernButton1 = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton1;
            WpfText uIGespeichertText11 = this.UIMainWindowWindow.UIItemCustom4.UIGespeichertText.UIGespeichertText1;
            WpfButton uIZurückButton1 = this.UIMainWindowWindow.UIScrollViewerPane.UIZurückButton1;
            WpfText uIMondayJanuary12018Text = this.UIMainWindowWindow.UIItemCustom5.UIDataGridTable.UIItem96Row.UIMondayJanuary12018Cell.UIMondayJanuary12018Text;
            uiListElement = uIMondayJanuary12018Text;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(77, 10));

            // Doppelklicken "Bücher" Schaltfläche
            Mouse.DoubleClick(uIBücherButton, new Point(57, 13));

            // Klicken "A# for beginners" Bezeichnung
            Mouse.Click(uIAforbeginnersText, new Point(46, 14));

            // Klicken "A# for beginners" Bezeichnung
            Mouse.Click(uIAforbeginnersText1, new Point(46, 14));

            // "01-Sep-2018" in "dtpStart" Datumsauswahl auswählen
            uIDtpStartDatePicker.DateAsString = this.Positivtest1Params.UIDtpStartDatePickerDateAsString;

            // "01-Oct-2018" in "dtpEnd" Datumsauswahl auswählen
            uIDtpEndDatePicker.DateAsString = this.Positivtest1Params.UIDtpEndDatePickerDateAsString;

            // "111" in "cbxKunde" Kombinationsfeld auswählen
            uICbxKundeComboBox.SelectedItem = this.Positivtest1Params.UICbxKundeComboBoxSelectedItem;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(21, 4));

            // Klicken "Gespeichert" Bezeichnung
            Mouse.Click(uIGespeichertText1, new Point(51, 8));

            Assert.AreEqual(uIGespeichertText1.DisplayText, "Gespeichert");

            // Klicken "Zurück" Schaltfläche
            Mouse.Click(uIZurückButton, new Point(47, 13));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(93, 15));

            // Doppelklicken "A# for beginners" Bezeichnung
            Mouse.DoubleClick(uIAforbeginnersText2, new Point(27, 10));

            // "01-Jan-2018" in "dtpStart" Datumsauswahl auswählen
            uIDtpStartDatePicker1.DateAsString = this.Positivtest1Params.UIDtpStartDatePicker1DateAsString;

            // "01-Jul-2018" in "dtpEnd" Datumsauswahl auswählen
            uIDtpEndDatePicker1.DateAsString = this.Positivtest1Params.UIDtpEndDatePicker1DateAsString;

            // "{Tab}" in "PART_TextBox" Textfeld eingeben
            Keyboard.SendKeys(uIPART_TextBoxEdit, this.Positivtest1Params.UIPART_TextBoxEditSendKeys, ModifierKeys.None);

            // "111" in "cbxKunde" Kombinationsfeld auswählen
            uICbxKundeComboBox1.SelectedItem = this.Positivtest1Params.UICbxKundeComboBox1SelectedItem;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton1, new Point(26, 10));

            // Klicken "Gespeichert" Bezeichnung
            Mouse.Click(uIGespeichertText11, new Point(46, 9));

            Assert.AreEqual(uIGespeichertText1.DisplayText, "Gespeichert");

            // Klicken "Zurück" Schaltfläche
            Mouse.Click(uIZurückButton1, new Point(25, 12));

            // Klicken "Monday, January 1, 2018" Bezeichnung
            Mouse.Click(uIMondayJanuary12018Text, new Point(96, 11));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(25, 22));
        }
        
        /// <summary>
        /// Positivtest2 - Verwenden Sie "Positivtest2Params", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void Positivtest2()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIAusleihenButton = this.UIMainWindowWindow.UIAusleihenButton;
            WpfText uIMondayJanuary12018Text = this.UIMainWindowWindow.UIItemCustom5.UIDataGridTable.UIItem96Row.UIMondayJanuary12018Cell.UIMondayJanuary12018Text;
            WpfCheckBox uIIstVerfügbarCheckBox = this.UIMainWindowWindow.UIScrollViewerPane.UIIstVerfügbarCheckBox;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIGespeichertText1 = this.UIMainWindowWindow.UIItemCustom2.UIGespeichertText.UIGespeichertText1;
            WpfButton uIZurückButton = this.UIMainWindowWindow.UIScrollViewerPane.UIZurückButton;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(223, 11));

            // Klicken "Ausleihen" Schaltfläche
            Mouse.Click(uIAusleihenButton, new Point(97, 14));

            // Doppelklicken "Monday, January 1, 2018" Bezeichnung
            Mouse.DoubleClick(uIMondayJanuary12018Text, new Point(28, 7));

            // "Ist Verfügbar" Kontrollkästchen auswählen
            uIIstVerfügbarCheckBox.Checked = this.Positivtest2Params.UIIstVerfügbarCheckBoxChecked;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(47, 17));

            // Klicken "Gespeichert" Bezeichnung
            Mouse.Click(uIGespeichertText1, new Point(53, 12));

            Assert.AreEqual(uIGespeichertText1.DisplayText, "Gespeichert");

            // Klicken "Zurück" Schaltfläche
            Mouse.Click(uIZurückButton, new Point(30, 10));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(13, 20));
        }
        
        /// <summary>
        /// Negativtest - Verwenden Sie "NegativtestParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void Negativtest()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfText uIAforbeginnersText = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem166Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfEdit uIPART_TextBoxEdit = this.UIMainWindowWindow.UIItemCustom2.UIDtpStartDatePicker.UIPART_TextBoxEdit;
            WpfText uIStartText = this.UIMainWindowWindow.UIScrollViewerPane.UIStartText;
            WpfDatePicker uIDtpStartDatePicker = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpStartDatePicker;
            WpfDatePicker uIDtpEndDatePicker = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpEndDatePicker;
            WpfEdit uIPART_TextBoxEdit1 = this.UIMainWindowWindow.UIItemCustom2.UIDtpEndDatePicker.UIPART_TextBoxEdit;
            WpfComboBox uICbxKundeComboBox = this.UIMainWindowWindow.UIScrollViewerPane.UICbxKundeComboBox;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIDatumüberschneidetsiText1 = this.UIMainWindowWindow.UIItemCustom2.UIGespeichertText.UIDatumüberschneidetsiText1;
            WpfText uIDatumüberschneidetsiText11 = this.UIMainWindowWindow.UIItemCustom2.UIGespeichertText.UIDatumüberschneidetsiText11;
            WpfButton uIZurückButton = this.UIMainWindowWindow.UIScrollViewerPane.UIZurückButton;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(152, 9));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(63, 15));

            // Doppelklicken "A# for beginners" Bezeichnung
            Mouse.DoubleClick(uIAforbeginnersText, new Point(61, 12));

            // Doppelklicken "PART_TextBox" Textfeld
            Mouse.DoubleClick(uIPART_TextBoxEdit, new Point(85, 9));

            // Klicken "Start:" Bezeichnung
            Mouse.Click(uIStartText, new Point(19, 4));

            // "06-Jun-2018" in "dtpStart" Datumsauswahl auswählen
            uIDtpStartDatePicker.DateAsString = this.NegativtestParams.UIDtpStartDatePickerDateAsString;

            // "01-Dec-2018" in "dtpEnd" Datumsauswahl auswählen
            uIDtpEndDatePicker.DateAsString = this.NegativtestParams.UIDtpEndDatePickerDateAsString;

            // "{Tab}" in "PART_TextBox" Textfeld eingeben
            Keyboard.SendKeys(uIPART_TextBoxEdit1, this.NegativtestParams.UIPART_TextBoxEditSendKeys, ModifierKeys.None);

            // "111" in "cbxKunde" Kombinationsfeld auswählen
            uICbxKundeComboBox.SelectedItem = this.NegativtestParams.UICbxKundeComboBoxSelectedItem;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(22, 11));

            // Klicken "Datum überschneidet sich mit einer anderen Ausleih..." Bezeichnung
            Mouse.Click(uIDatumüberschneidetsiText1, new Point(83, 14));

            Assert.AreNotEqual(uIDatumüberschneidetsiText1.DisplayText, "Gespeichert");

            // Klicken "Zurück" Schaltfläche
            Mouse.Click(uIZurückButton, new Point(31, 14));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(23, 18));
        }
        
        #region Properties
        public virtual Positivtest1Params Positivtest1Params
        {
            get
            {
                if ((this.mPositivtest1Params == null))
                {
                    this.mPositivtest1Params = new Positivtest1Params();
                }
                return this.mPositivtest1Params;
            }
        }
        
        public virtual Positivtest2Params Positivtest2Params
        {
            get
            {
                if ((this.mPositivtest2Params == null))
                {
                    this.mPositivtest2Params = new Positivtest2Params();
                }
                return this.mPositivtest2Params;
            }
        }
        
        public virtual NegativtestParams NegativtestParams
        {
            get
            {
                if ((this.mNegativtestParams == null))
                {
                    this.mNegativtestParams = new NegativtestParams();
                }
                return this.mNegativtestParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private Positivtest1Params mPositivtest1Params;
        
        private Positivtest2Params mPositivtest2Params;
        
        private NegativtestParams mNegativtestParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// An "Positivtest1" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class Positivtest1Params
    {
        
        #region Fields
        /// <summary>
        /// "01-Sep-2018" in "dtpStart" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpStartDatePickerDateAsString = "01-Sep-2018";
        
        /// <summary>
        /// "01-Oct-2018" in "dtpEnd" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpEndDatePickerDateAsString = "01-Oct-2018";
        
        /// <summary>
        /// "111" in "cbxKunde" Kombinationsfeld auswählen
        /// </summary>
        public string UICbxKundeComboBoxSelectedItem = "111";
        
        /// <summary>
        /// "01-Jan-2018" in "dtpStart" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpStartDatePicker1DateAsString = "01-Jan-2018";
        
        /// <summary>
        /// "01-Jul-2018" in "dtpEnd" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpEndDatePicker1DateAsString = "01-Jul-2018";
        
        /// <summary>
        /// "{Tab}" in "PART_TextBox" Textfeld eingeben
        /// </summary>
        public string UIPART_TextBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// "111" in "cbxKunde" Kombinationsfeld auswählen
        /// </summary>
        public string UICbxKundeComboBox1SelectedItem = "111";
        #endregion
    }
    
    /// <summary>
    /// An "Positivtest2" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class Positivtest2Params
    {
        
        #region Fields
        /// <summary>
        /// "Ist Verfügbar" Kontrollkästchen auswählen
        /// </summary>
        public bool UIIstVerfügbarCheckBoxChecked = true;
        #endregion
    }
    
    /// <summary>
    /// An "Negativtest" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class NegativtestParams
    {
        
        #region Fields
        /// <summary>
        /// "06-Jun-2018" in "dtpStart" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpStartDatePickerDateAsString = "06-Jun-2018";
        
        /// <summary>
        /// "01-Dec-2018" in "dtpEnd" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpEndDatePickerDateAsString = "01-Dec-2018";
        
        /// <summary>
        /// "{Tab}" in "PART_TextBox" Textfeld eingeben
        /// </summary>
        public string UIPART_TextBoxEditSendKeys = "{Tab}";
        
        /// <summary>
        /// "111" in "cbxKunde" Kombinationsfeld auswählen
        /// </summary>
        public string UICbxKundeComboBoxSelectedItem = "111";
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UILb120_2_BibliothekexListItem UILb120_2_BibliothekexListItem
        {
            get
            {
                if ((this.mUILb120_2_BibliothekexListItem == null))
                {
                    this.mUILb120_2_BibliothekexListItem = new UILb120_2_BibliothekexListItem(this);
                }
                return this.mUILb120_2_BibliothekexListItem;
            }
        }
        #endregion
        
        #region Fields
        private UILb120_2_BibliothekexListItem mUILb120_2_BibliothekexListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UILb120_2_BibliothekexListItem : WinListItem
    {
        
        public UILb120_2_BibliothekexListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "lb120_2_Bibliothek.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIBücherButton
        {
            get
            {
                if ((this.mUIBücherButton == null))
                {
                    this.mUIBücherButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIBücherButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnBook";
                    this.mUIBücherButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBücherButton;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        
        public UIItemCustom2 UIItemCustom2
        {
            get
            {
                if ((this.mUIItemCustom2 == null))
                {
                    this.mUIItemCustom2 = new UIItemCustom2(this);
                }
                return this.mUIItemCustom2;
            }
        }
        
        public UIScrollViewerPane UIScrollViewerPane
        {
            get
            {
                if ((this.mUIScrollViewerPane == null))
                {
                    this.mUIScrollViewerPane = new UIScrollViewerPane(this);
                }
                return this.mUIScrollViewerPane;
            }
        }
        
        public UIItemCustom3 UIItemCustom3
        {
            get
            {
                if ((this.mUIItemCustom3 == null))
                {
                    this.mUIItemCustom3 = new UIItemCustom3(this);
                }
                return this.mUIItemCustom3;
            }
        }
        
        public UIItemCustom4 UIItemCustom4
        {
            get
            {
                if ((this.mUIItemCustom4 == null))
                {
                    this.mUIItemCustom4 = new UIItemCustom4(this);
                }
                return this.mUIItemCustom4;
            }
        }
        
        public UIItemCustom5 UIItemCustom5
        {
            get
            {
                if ((this.mUIItemCustom5 == null))
                {
                    this.mUIItemCustom5 = new UIItemCustom5(this);
                }
                return this.mUIItemCustom5;
            }
        }
        
        public WpfButton UIAusleihenButton
        {
            get
            {
                if ((this.mUIAusleihenButton == null))
                {
                    this.mUIAusleihenButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIAusleihenButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnAusleihe";
                    this.mUIAusleihenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAusleihenButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIBücherButton;
        
        private UIItemCustom mUIItemCustom;
        
        private UIItemCustom1 mUIItemCustom1;
        
        private UIItemCustom2 mUIItemCustom2;
        
        private UIScrollViewerPane mUIScrollViewerPane;
        
        private UIItemCustom3 mUIItemCustom3;
        
        private UIItemCustom4 mUIItemCustom4;
        
        private UIItemCustom5 mUIItemCustom5;
        
        private WpfButton mUIAusleihenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_Buch";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDataGridTable UIDataGridTable
        {
            get
            {
                if ((this.mUIDataGridTable == null))
                {
                    this.mUIDataGridTable = new UIDataGridTable(this);
                }
                return this.mUIDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridTable mUIDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDataGridTable : WpfTable
    {
        
        public UIDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dataGrid";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem166Row UIItem166Row
        {
            get
            {
                if ((this.mUIItem166Row == null))
                {
                    this.mUIItem166Row = new UIItem166Row(this);
                }
                return this.mUIItem166Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem166Row mUIItem166Row;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItem166Row : WpfRow
    {
        
        public UIItem166Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfRow.PropertyNames.Name] = "166";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIAforbeginnersCell UIAforbeginnersCell
        {
            get
            {
                if ((this.mUIAforbeginnersCell == null))
                {
                    this.mUIAforbeginnersCell = new UIAforbeginnersCell(this);
                }
                return this.mUIAforbeginnersCell;
            }
        }
        #endregion
        
        #region Fields
        private UIAforbeginnersCell mUIAforbeginnersCell;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIAforbeginnersCell : WpfCell
    {
        
        public UIAforbeginnersCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Buchtitel";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAforbeginnersText
        {
            get
            {
                if ((this.mUIAforbeginnersText == null))
                {
                    this.mUIAforbeginnersText = new WpfText(this);
                    #region Suchkriterien
                    this.mUIAforbeginnersText.SearchProperties[WpfText.PropertyNames.Name] = "A# for beginners";
                    this.mUIAforbeginnersText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAforbeginnersText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAforbeginnersText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_Buch";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDataGridTable1 UIDataGridTable
        {
            get
            {
                if ((this.mUIDataGridTable == null))
                {
                    this.mUIDataGridTable = new UIDataGridTable1(this);
                }
                return this.mUIDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridTable1 mUIDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDataGridTable1 : WpfTable
    {
        
        public UIDataGridTable1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dataGrid";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem166Row1 UIItem166Row
        {
            get
            {
                if ((this.mUIItem166Row == null))
                {
                    this.mUIItem166Row = new UIItem166Row1(this);
                }
                return this.mUIItem166Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem166Row1 mUIItem166Row;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItem166Row1 : WpfRow
    {
        
        public UIItem166Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfRow.PropertyNames.Name] = "166";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIAforbeginnersCell1 UIAforbeginnersCell
        {
            get
            {
                if ((this.mUIAforbeginnersCell == null))
                {
                    this.mUIAforbeginnersCell = new UIAforbeginnersCell1(this);
                }
                return this.mUIAforbeginnersCell;
            }
        }
        #endregion
        
        #region Fields
        private UIAforbeginnersCell1 mUIAforbeginnersCell;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIAforbeginnersCell1 : WpfCell
    {
        
        public UIAforbeginnersCell1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Buchtitel";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAforbeginnersText
        {
            get
            {
                if ((this.mUIAforbeginnersText == null))
                {
                    this.mUIAforbeginnersText = new WpfText(this);
                    #region Suchkriterien
                    this.mUIAforbeginnersText.SearchProperties[WpfText.PropertyNames.Name] = "A# for beginners";
                    this.mUIAforbeginnersText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAforbeginnersText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAforbeginnersText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom2 : WpfCustom
    {
        
        public UIItemCustom2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_DetailedView";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDtpStartDatePicker UIDtpStartDatePicker
        {
            get
            {
                if ((this.mUIDtpStartDatePicker == null))
                {
                    this.mUIDtpStartDatePicker = new UIDtpStartDatePicker(this);
                }
                return this.mUIDtpStartDatePicker;
            }
        }
        
        public UIGespeichertText UIGespeichertText
        {
            get
            {
                if ((this.mUIGespeichertText == null))
                {
                    this.mUIGespeichertText = new UIGespeichertText(this);
                }
                return this.mUIGespeichertText;
            }
        }
        
        public UIDtpEndDatePicker UIDtpEndDatePicker
        {
            get
            {
                if ((this.mUIDtpEndDatePicker == null))
                {
                    this.mUIDtpEndDatePicker = new UIDtpEndDatePicker(this);
                }
                return this.mUIDtpEndDatePicker;
            }
        }
        #endregion
        
        #region Fields
        private UIDtpStartDatePicker mUIDtpStartDatePicker;
        
        private UIGespeichertText mUIGespeichertText;
        
        private UIDtpEndDatePicker mUIDtpEndDatePicker;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDtpStartDatePicker : WpfDatePicker
    {
        
        public UIDtpStartDatePicker(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpStart";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_TextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIGespeichertText : WpfText
    {
        
        public UIGespeichertText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblStatus";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIGespeichertText1
        {
            get
            {
                if ((this.mUIGespeichertText1 == null))
                {
                    this.mUIGespeichertText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIGespeichertText1.SearchProperties[WpfText.PropertyNames.Name] = "Gespeichert";
                    this.mUIGespeichertText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIGespeichertText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIGespeichertText1;
            }
        }
        
        public WpfText UIDatumüberschneidetsiText1
        {
            get
            {
                if ((this.mUIDatumüberschneidetsiText1 == null))
                {
                    this.mUIDatumüberschneidetsiText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIDatumüberschneidetsiText1.SearchProperties[WpfText.PropertyNames.Name] = "Datum überschneidet sich mit einer anderen Ausleihe";
                    this.mUIDatumüberschneidetsiText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIDatumüberschneidetsiText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDatumüberschneidetsiText1;
            }
        }
        
        public WpfText UIDatumüberschneidetsiText11
        {
            get
            {
                if ((this.mUIDatumüberschneidetsiText11 == null))
                {
                    this.mUIDatumüberschneidetsiText11 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIDatumüberschneidetsiText11.SearchProperties[WpfText.PropertyNames.Name] = "Datum überschneidet sich mit einer anderen Ausleihe";
                    this.mUIDatumüberschneidetsiText11.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIDatumüberschneidetsiText11.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDatumüberschneidetsiText11;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIGespeichertText1;
        
        private WpfText mUIDatumüberschneidetsiText1;
        
        private WpfText mUIDatumüberschneidetsiText11;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDtpEndDatePicker : WpfDatePicker
    {
        
        public UIDtpEndDatePicker(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpEnd";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_TextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIScrollViewerPane : WpfPane
    {
        
        public UIScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfDatePicker UIDtpStartDatePicker
        {
            get
            {
                if ((this.mUIDtpStartDatePicker == null))
                {
                    this.mUIDtpStartDatePicker = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDtpStartDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpStart";
                    this.mUIDtpStartDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDtpStartDatePicker;
            }
        }
        
        public WpfDatePicker UIDtpEndDatePicker
        {
            get
            {
                if ((this.mUIDtpEndDatePicker == null))
                {
                    this.mUIDtpEndDatePicker = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDtpEndDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpEnd";
                    this.mUIDtpEndDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDtpEndDatePicker;
            }
        }
        
        public WpfComboBox UICbxKundeComboBox
        {
            get
            {
                if ((this.mUICbxKundeComboBox == null))
                {
                    this.mUICbxKundeComboBox = new WpfComboBox(this);
                    #region Suchkriterien
                    this.mUICbxKundeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbxKunde";
                    this.mUICbxKundeComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICbxKundeComboBox;
            }
        }
        
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        
        public WpfButton UIZurückButton
        {
            get
            {
                if ((this.mUIZurückButton == null))
                {
                    this.mUIZurückButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIZurückButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnZurück";
                    this.mUIZurückButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIZurückButton;
            }
        }
        
        public WpfDatePicker UIDtpStartDatePicker1
        {
            get
            {
                if ((this.mUIDtpStartDatePicker1 == null))
                {
                    this.mUIDtpStartDatePicker1 = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDtpStartDatePicker1.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpStart";
                    this.mUIDtpStartDatePicker1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDtpStartDatePicker1;
            }
        }
        
        public WpfDatePicker UIDtpEndDatePicker1
        {
            get
            {
                if ((this.mUIDtpEndDatePicker1 == null))
                {
                    this.mUIDtpEndDatePicker1 = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDtpEndDatePicker1.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpEnd";
                    this.mUIDtpEndDatePicker1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDtpEndDatePicker1;
            }
        }
        
        public WpfComboBox UICbxKundeComboBox1
        {
            get
            {
                if ((this.mUICbxKundeComboBox1 == null))
                {
                    this.mUICbxKundeComboBox1 = new WpfComboBox(this);
                    #region Suchkriterien
                    this.mUICbxKundeComboBox1.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbxKunde";
                    this.mUICbxKundeComboBox1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICbxKundeComboBox1;
            }
        }
        
        public WpfButton UISpeichernButton1
        {
            get
            {
                if ((this.mUISpeichernButton1 == null))
                {
                    this.mUISpeichernButton1 = new WpfButton(this);
                    #region Suchkriterien
                    this.mUISpeichernButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISpeichernButton1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton1;
            }
        }
        
        public WpfButton UIZurückButton1
        {
            get
            {
                if ((this.mUIZurückButton1 == null))
                {
                    this.mUIZurückButton1 = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIZurückButton1.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnZurück";
                    this.mUIZurückButton1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIZurückButton1;
            }
        }
        
        public WpfCheckBox UIIstVerfügbarCheckBox
        {
            get
            {
                if ((this.mUIIstVerfügbarCheckBox == null))
                {
                    this.mUIIstVerfügbarCheckBox = new WpfCheckBox(this);
                    #region Suchkriterien
                    this.mUIIstVerfügbarCheckBox.SearchProperties[WpfCheckBox.PropertyNames.AutomationId] = "chkIsAvailable";
                    this.mUIIstVerfügbarCheckBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIIstVerfügbarCheckBox;
            }
        }
        
        public WpfText UIStartText
        {
            get
            {
                if ((this.mUIStartText == null))
                {
                    this.mUIStartText = new WpfText(this);
                    #region Suchkriterien
                    this.mUIStartText.SearchProperties[WpfText.PropertyNames.AutomationId] = "label2";
                    this.mUIStartText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIStartText;
            }
        }
        #endregion
        
        #region Fields
        private WpfDatePicker mUIDtpStartDatePicker;
        
        private WpfDatePicker mUIDtpEndDatePicker;
        
        private WpfComboBox mUICbxKundeComboBox;
        
        private WpfButton mUISpeichernButton;
        
        private WpfButton mUIZurückButton;
        
        private WpfDatePicker mUIDtpStartDatePicker1;
        
        private WpfDatePicker mUIDtpEndDatePicker1;
        
        private WpfComboBox mUICbxKundeComboBox1;
        
        private WpfButton mUISpeichernButton1;
        
        private WpfButton mUIZurückButton1;
        
        private WpfCheckBox mUIIstVerfügbarCheckBox;
        
        private WpfText mUIStartText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom3 : WpfCustom
    {
        
        public UIItemCustom3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_Buch";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDataGridTable2 UIDataGridTable
        {
            get
            {
                if ((this.mUIDataGridTable == null))
                {
                    this.mUIDataGridTable = new UIDataGridTable2(this);
                }
                return this.mUIDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridTable2 mUIDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDataGridTable2 : WpfTable
    {
        
        public UIDataGridTable2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dataGrid";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem166Row2 UIItem166Row
        {
            get
            {
                if ((this.mUIItem166Row == null))
                {
                    this.mUIItem166Row = new UIItem166Row2(this);
                }
                return this.mUIItem166Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem166Row2 mUIItem166Row;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItem166Row2 : WpfRow
    {
        
        public UIItem166Row2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfRow.PropertyNames.Name] = "166";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIAforbeginnersCell2 UIAforbeginnersCell
        {
            get
            {
                if ((this.mUIAforbeginnersCell == null))
                {
                    this.mUIAforbeginnersCell = new UIAforbeginnersCell2(this);
                }
                return this.mUIAforbeginnersCell;
            }
        }
        #endregion
        
        #region Fields
        private UIAforbeginnersCell2 mUIAforbeginnersCell;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIAforbeginnersCell2 : WpfCell
    {
        
        public UIAforbeginnersCell2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Buchtitel";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAforbeginnersText
        {
            get
            {
                if ((this.mUIAforbeginnersText == null))
                {
                    this.mUIAforbeginnersText = new WpfText(this);
                    #region Suchkriterien
                    this.mUIAforbeginnersText.SearchProperties[WpfText.PropertyNames.Name] = "A# for beginners";
                    this.mUIAforbeginnersText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAforbeginnersText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAforbeginnersText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom4 : WpfCustom
    {
        
        public UIItemCustom4(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_DetailedView";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDtpEndDatePicker1 UIDtpEndDatePicker
        {
            get
            {
                if ((this.mUIDtpEndDatePicker == null))
                {
                    this.mUIDtpEndDatePicker = new UIDtpEndDatePicker1(this);
                }
                return this.mUIDtpEndDatePicker;
            }
        }
        
        public UIGespeichertText2 UIGespeichertText
        {
            get
            {
                if ((this.mUIGespeichertText == null))
                {
                    this.mUIGespeichertText = new UIGespeichertText2(this);
                }
                return this.mUIGespeichertText;
            }
        }
        #endregion
        
        #region Fields
        private UIDtpEndDatePicker1 mUIDtpEndDatePicker;
        
        private UIGespeichertText2 mUIGespeichertText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDtpEndDatePicker1 : WpfDatePicker
    {
        
        public UIDtpEndDatePicker1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpEnd";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfEdit UIPART_TextBoxEdit
        {
            get
            {
                if ((this.mUIPART_TextBoxEdit == null))
                {
                    this.mUIPART_TextBoxEdit = new WpfEdit(this);
                    #region Suchkriterien
                    this.mUIPART_TextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "PART_TextBox";
                    this.mUIPART_TextBoxEdit.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIPART_TextBoxEdit;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUIPART_TextBoxEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIGespeichertText2 : WpfText
    {
        
        public UIGespeichertText2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblStatus";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIGespeichertText1
        {
            get
            {
                if ((this.mUIGespeichertText1 == null))
                {
                    this.mUIGespeichertText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIGespeichertText1.SearchProperties[WpfText.PropertyNames.Name] = "Gespeichert";
                    this.mUIGespeichertText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIGespeichertText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIGespeichertText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIGespeichertText1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom5 : WpfCustom
    {
        
        public UIItemCustom5(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_Ausleihe";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDataGridTable3 UIDataGridTable
        {
            get
            {
                if ((this.mUIDataGridTable == null))
                {
                    this.mUIDataGridTable = new UIDataGridTable3(this);
                }
                return this.mUIDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridTable3 mUIDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDataGridTable3 : WpfTable
    {
        
        public UIDataGridTable3(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dataGrid";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem96Row UIItem96Row
        {
            get
            {
                if ((this.mUIItem96Row == null))
                {
                    this.mUIItem96Row = new UIItem96Row(this);
                }
                return this.mUIItem96Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem96Row mUIItem96Row;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItem96Row : WpfRow
    {
        
        public UIItem96Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfRow.PropertyNames.Name] = "96";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIMondayJanuary12018Cell UIMondayJanuary12018Cell
        {
            get
            {
                if ((this.mUIMondayJanuary12018Cell == null))
                {
                    this.mUIMondayJanuary12018Cell = new UIMondayJanuary12018Cell(this);
                }
                return this.mUIMondayJanuary12018Cell;
            }
        }
        #endregion
        
        #region Fields
        private UIMondayJanuary12018Cell mUIMondayJanuary12018Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIMondayJanuary12018Cell : WpfCell
    {
        
        public UIMondayJanuary12018Cell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Start";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIMondayJanuary12018Text
        {
            get
            {
                if ((this.mUIMondayJanuary12018Text == null))
                {
                    this.mUIMondayJanuary12018Text = new WpfText(this);
                    #region Suchkriterien
                    this.mUIMondayJanuary12018Text.SearchProperties[WpfText.PropertyNames.Name] = "Monday, January 1, 2018";
                    this.mUIMondayJanuary12018Text.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIMondayJanuary12018Text;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIMondayJanuary12018Text;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UISchließenButton
        {
            get
            {
                if ((this.mUISchließenButton == null))
                {
                    this.mUISchließenButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUISchließenButton.SearchProperties[WinButton.PropertyNames.Name] = "Schließen";
                    this.mUISchließenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISchließenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISchließenButton;
        #endregion
    }
}
