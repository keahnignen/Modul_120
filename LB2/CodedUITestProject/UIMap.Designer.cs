// ------------------------------------------------------------------------------
//  <auto-generated>
//      Dieser Code wurde vom Coded UI-Test-Generator generiert.
//      Version: 15.0.0.0
//
//      In dieser Datei sind spezialisierte Klassen definiert, die in einem
//      Coded UI-Test verwendet werden.
//      In dieser Datei können die erforderlichen Anpassungen vorgenommen werden.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace CodedUITestProject
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod1
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(78, 10));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(92, 10));
        }
        
        /// <summary>
        /// CreateAusleiheOhneKunde
        /// </summary>
        public void CreateAusleiheOhneKunde()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfText uIAforbeginnersText = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem0Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIKeinBenutzergewältText1 = this.UIMainWindowWindow.UIItemCustom1.UIKeinBenutzergewältText.UIKeinBenutzergewältText1;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(180, 15));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(78, 10));

            // Doppelklicken "Bücher" Schaltfläche
            Mouse.DoubleClick(uIBücherButton, new Point(78, 10));

            // Doppelklicken "A# for beginners" Bezeichnung
            Mouse.DoubleClick(uIAforbeginnersText, new Point(46, 8));

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(22, 8));

            // Klicken "Kein Benutzer gewält" Bezeichnung
            Mouse.Click(uIKeinBenutzergewältText1, new Point(93, 11));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(25, 13));
        }
        
        /// <summary>
        /// CreateAusleiheEndeIstVorStart - Verwenden Sie "CreateAusleiheEndeIstVorStartParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void CreateAusleiheEndeIstVorStart()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfCell uITrueCell = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem0Row.UITrueCell;
            WpfDatePicker uIDtpEndDatePicker = this.UIMainWindowWindow.UIScrollViewerPane.UIDtpEndDatePicker;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIStartDatumistälteralText1 = this.UIMainWindowWindow.UIItemCustom1.UIKeinBenutzergewältText.UIStartDatumistälteralText1;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(190, 8));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(105, 15));

            // Doppelklicken "True" Zelle
            Mouse.DoubleClick(uITrueCell, new Point(61, 10));

            // "26-Mar-2018" in "dtpEnd" Datumsauswahl auswählen
            uIDtpEndDatePicker.DateAsString = this.CreateAusleiheEndeIstVorStartParams.UIDtpEndDatePickerDateAsString;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(25, 17));

            // Klicken "Start Datum ist älter als dass End Datum" Bezeichnung
            Mouse.Click(uIStartDatumistälteralText1, new Point(153, 9));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(13, 16));
        }
        
        /// <summary>
        /// CreateAusleihe - Verwenden Sie "CreateAusleiheParams", um Parameter an diese Methode zu übergeben.
        /// </summary>
        public void CreateAusleihe()
        {
            #region Variable Declarations
            WinEdit uINameEdit = this.UIDebugWindow.UIItemWindow.UILb120_2_BibliothekexListItem.UINameEdit;
            WpfButton uIBücherButton = this.UIMainWindowWindow.UIBücherButton;
            WpfText uIAforbeginnersText = this.UIMainWindowWindow.UIItemCustom.UIDataGridTable.UIItem0Row.UIAforbeginnersCell.UIAforbeginnersText;
            WpfComboBox uICbxKundeComboBox = this.UIMainWindowWindow.UIScrollViewerPane.UICbxKundeComboBox;
            WpfButton uISpeichernButton = this.UIMainWindowWindow.UIScrollViewerPane.UISpeichernButton;
            WpfText uIGespeichertText1 = this.UIMainWindowWindow.UIItemCustom1.UIKeinBenutzergewältText.UIGespeichertText1;
            WinButton uISchließenButton = this.UIMainWindowWindow1.UISchließenButton;
            #endregion

            // Doppelklicken "Name" Textfeld
            Mouse.DoubleClick(uINameEdit, new Point(152, 16));

            // Klicken "Bücher" Schaltfläche
            Mouse.Click(uIBücherButton, new Point(64, 14));

            // Doppelklicken "A# for beginners" Bezeichnung
            Mouse.DoubleClick(uIAforbeginnersText, new Point(91, 7));

            // "111" in "cbxKunde" Kombinationsfeld auswählen
            uICbxKundeComboBox.SelectedItem = this.CreateAusleiheParams.UICbxKundeComboBoxSelectedItem;

            // Klicken "Speichern" Schaltfläche
            Mouse.Click(uISpeichernButton, new Point(37, 15));

            // Klicken "Gespeichert" Bezeichnung
            Mouse.Click(uIGespeichertText1, new Point(52, 6));

            // Klicken "Schließen" Schaltfläche
            Mouse.Click(uISchließenButton, new Point(32, 17));
        }
        
        #region Properties
        public virtual CreateAusleiheEndeIstVorStartParams CreateAusleiheEndeIstVorStartParams
        {
            get
            {
                if ((this.mCreateAusleiheEndeIstVorStartParams == null))
                {
                    this.mCreateAusleiheEndeIstVorStartParams = new CreateAusleiheEndeIstVorStartParams();
                }
                return this.mCreateAusleiheEndeIstVorStartParams;
            }
        }
        
        public virtual CreateAusleiheParams CreateAusleiheParams
        {
            get
            {
                if ((this.mCreateAusleiheParams == null))
                {
                    this.mCreateAusleiheParams = new CreateAusleiheParams();
                }
                return this.mCreateAusleiheParams;
            }
        }
        
        public UIDebugWindow UIDebugWindow
        {
            get
            {
                if ((this.mUIDebugWindow == null))
                {
                    this.mUIDebugWindow = new UIDebugWindow();
                }
                return this.mUIDebugWindow;
            }
        }
        
        public UIMainWindowWindow UIMainWindowWindow
        {
            get
            {
                if ((this.mUIMainWindowWindow == null))
                {
                    this.mUIMainWindowWindow = new UIMainWindowWindow();
                }
                return this.mUIMainWindowWindow;
            }
        }
        
        public UIMainWindowWindow1 UIMainWindowWindow1
        {
            get
            {
                if ((this.mUIMainWindowWindow1 == null))
                {
                    this.mUIMainWindowWindow1 = new UIMainWindowWindow1();
                }
                return this.mUIMainWindowWindow1;
            }
        }
        #endregion
        
        #region Fields
        private CreateAusleiheEndeIstVorStartParams mCreateAusleiheEndeIstVorStartParams;
        
        private CreateAusleiheParams mCreateAusleiheParams;
        
        private UIDebugWindow mUIDebugWindow;
        
        private UIMainWindowWindow mUIMainWindowWindow;
        
        private UIMainWindowWindow1 mUIMainWindowWindow1;
        #endregion
    }
    
    /// <summary>
    /// An "CreateAusleiheEndeIstVorStart" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateAusleiheEndeIstVorStartParams
    {
        
        #region Fields
        /// <summary>
        /// "26-Mar-2018" in "dtpEnd" Datumsauswahl auswählen
        /// </summary>
        public string UIDtpEndDatePickerDateAsString = "26-Mar-2018";
        #endregion
    }
    
    /// <summary>
    /// An "CreateAusleihe" zu übergebende Parameter
    /// </summary>
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class CreateAusleiheParams
    {
        
        #region Fields
        /// <summary>
        /// "111" in "cbxKunde" Kombinationsfeld auswählen
        /// </summary>
        public string UICbxKundeComboBoxSelectedItem = "111";
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDebugWindow : WinWindow
    {
        
        public UIDebugWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Debug";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "CabinetWClass";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Elementansicht";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public UILb120_2_BibliothekexListItem UILb120_2_BibliothekexListItem
        {
            get
            {
                if ((this.mUILb120_2_BibliothekexListItem == null))
                {
                    this.mUILb120_2_BibliothekexListItem = new UILb120_2_BibliothekexListItem(this);
                }
                return this.mUILb120_2_BibliothekexListItem;
            }
        }
        #endregion
        
        #region Fields
        private UILb120_2_BibliothekexListItem mUILb120_2_BibliothekexListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UILb120_2_BibliothekexListItem : WinListItem
    {
        
        public UILb120_2_BibliothekexListItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WinListItem.PropertyNames.Name] = "lb120_2_Bibliothek.exe";
            this.WindowTitles.Add("Debug");
            #endregion
        }
        
        #region Properties
        public WinEdit UINameEdit
        {
            get
            {
                if ((this.mUINameEdit == null))
                {
                    this.mUINameEdit = new WinEdit(this);
                    #region Suchkriterien
                    this.mUINameEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Name";
                    this.mUINameEdit.WindowTitles.Add("Debug");
                    #endregion
                }
                return this.mUINameEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUINameEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIMainWindowWindow : WpfWindow
    {
        
        public UIMainWindowWindow()
        {
            #region Suchkriterien
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UIBücherButton
        {
            get
            {
                if ((this.mUIBücherButton == null))
                {
                    this.mUIBücherButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUIBücherButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnBook";
                    this.mUIBücherButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIBücherButton;
            }
        }
        
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        
        public UIScrollViewerPane UIScrollViewerPane
        {
            get
            {
                if ((this.mUIScrollViewerPane == null))
                {
                    this.mUIScrollViewerPane = new UIScrollViewerPane(this);
                }
                return this.mUIScrollViewerPane;
            }
        }
        
        public UIItemCustom1 UIItemCustom1
        {
            get
            {
                if ((this.mUIItemCustom1 == null))
                {
                    this.mUIItemCustom1 = new UIItemCustom1(this);
                }
                return this.mUIItemCustom1;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIBücherButton;
        
        private UIItemCustom mUIItemCustom;
        
        private UIScrollViewerPane mUIScrollViewerPane;
        
        private UIItemCustom1 mUIItemCustom1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_Buch";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIDataGridTable UIDataGridTable
        {
            get
            {
                if ((this.mUIDataGridTable == null))
                {
                    this.mUIDataGridTable = new UIDataGridTable(this);
                }
                return this.mUIDataGridTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridTable mUIDataGridTable;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIDataGridTable : WpfTable
    {
        
        public UIDataGridTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfTable.PropertyNames.AutomationId] = "dataGrid";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIItem0Row UIItem0Row
        {
            get
            {
                if ((this.mUIItem0Row == null))
                {
                    this.mUIItem0Row = new UIItem0Row(this);
                }
                return this.mUIItem0Row;
            }
        }
        #endregion
        
        #region Fields
        private UIItem0Row mUIItem0Row;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItem0Row : WpfRow
    {
        
        public UIItem0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfRow.PropertyNames.Name] = "0";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIAforbeginnersCell UIAforbeginnersCell
        {
            get
            {
                if ((this.mUIAforbeginnersCell == null))
                {
                    this.mUIAforbeginnersCell = new UIAforbeginnersCell(this);
                }
                return this.mUIAforbeginnersCell;
            }
        }
        
        public WpfCell UITrueCell
        {
            get
            {
                if ((this.mUITrueCell == null))
                {
                    this.mUITrueCell = new WpfCell(this);
                    #region Suchkriterien
                    this.mUITrueCell.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Ist verfügbar";
                    this.mUITrueCell.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUITrueCell;
            }
        }
        #endregion
        
        #region Fields
        private UIAforbeginnersCell mUIAforbeginnersCell;
        
        private WpfCell mUITrueCell;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIAforbeginnersCell : WpfCell
    {
        
        public UIAforbeginnersCell(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfCell.PropertyNames.ColumnHeader] = "Buchtitel";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIAforbeginnersText
        {
            get
            {
                if ((this.mUIAforbeginnersText == null))
                {
                    this.mUIAforbeginnersText = new WpfText(this);
                    #region Suchkriterien
                    this.mUIAforbeginnersText.SearchProperties[WpfText.PropertyNames.Name] = "A# for beginners";
                    this.mUIAforbeginnersText.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIAforbeginnersText;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIAforbeginnersText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIScrollViewerPane : WpfPane
    {
        
        public UIScrollViewerPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfPane.PropertyNames.ClassName] = "Uia.ScrollViewer";
            this.SearchProperties[WpfPane.PropertyNames.AutomationId] = "scrollViewer";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfButton UISpeichernButton
        {
            get
            {
                if ((this.mUISpeichernButton == null))
                {
                    this.mUISpeichernButton = new WpfButton(this);
                    #region Suchkriterien
                    this.mUISpeichernButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "btnSave";
                    this.mUISpeichernButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISpeichernButton;
            }
        }
        
        public WpfDatePicker UIDtpEndDatePicker
        {
            get
            {
                if ((this.mUIDtpEndDatePicker == null))
                {
                    this.mUIDtpEndDatePicker = new WpfDatePicker(this);
                    #region Suchkriterien
                    this.mUIDtpEndDatePicker.SearchProperties[WpfDatePicker.PropertyNames.AutomationId] = "dtpEnd";
                    this.mUIDtpEndDatePicker.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIDtpEndDatePicker;
            }
        }
        
        public WpfComboBox UICbxKundeComboBox
        {
            get
            {
                if ((this.mUICbxKundeComboBox == null))
                {
                    this.mUICbxKundeComboBox = new WpfComboBox(this);
                    #region Suchkriterien
                    this.mUICbxKundeComboBox.SearchProperties[WpfComboBox.PropertyNames.AutomationId] = "cbxKunde";
                    this.mUICbxKundeComboBox.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUICbxKundeComboBox;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUISpeichernButton;
        
        private WpfDatePicker mUIDtpEndDatePicker;
        
        private WpfComboBox mUICbxKundeComboBox;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIItemCustom1 : WpfCustom
    {
        
        public UIItemCustom1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.UC_DetailedView";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public UIKeinBenutzergewältText UIKeinBenutzergewältText
        {
            get
            {
                if ((this.mUIKeinBenutzergewältText == null))
                {
                    this.mUIKeinBenutzergewältText = new UIKeinBenutzergewältText(this);
                }
                return this.mUIKeinBenutzergewältText;
            }
        }
        #endregion
        
        #region Fields
        private UIKeinBenutzergewältText mUIKeinBenutzergewältText;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIKeinBenutzergewältText : WpfText
    {
        
        public UIKeinBenutzergewältText(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Suchkriterien
            this.SearchProperties[WpfText.PropertyNames.AutomationId] = "lblStatus";
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WpfText UIKeinBenutzergewältText1
        {
            get
            {
                if ((this.mUIKeinBenutzergewältText1 == null))
                {
                    this.mUIKeinBenutzergewältText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIKeinBenutzergewältText1.SearchProperties[WpfText.PropertyNames.Name] = "Kein Benutzer gewält";
                    this.mUIKeinBenutzergewältText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIKeinBenutzergewältText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIKeinBenutzergewältText1;
            }
        }
        
        public WpfText UIStartDatumistälteralText1
        {
            get
            {
                if ((this.mUIStartDatumistälteralText1 == null))
                {
                    this.mUIStartDatumistälteralText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIStartDatumistälteralText1.SearchProperties[WpfText.PropertyNames.Name] = "Start Datum ist älter als dass End Datum";
                    this.mUIStartDatumistälteralText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIStartDatumistälteralText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIStartDatumistälteralText1;
            }
        }
        
        public WpfText UIGespeichertText1
        {
            get
            {
                if ((this.mUIGespeichertText1 == null))
                {
                    this.mUIGespeichertText1 = new WpfText(this);
                    #region Suchkriterien
                    this.mUIGespeichertText1.SearchProperties[WpfText.PropertyNames.Name] = "Gespeichert";
                    this.mUIGespeichertText1.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIGespeichertText1.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUIGespeichertText1;
            }
        }
        #endregion
        
        #region Fields
        private WpfText mUIKeinBenutzergewältText1;
        
        private WpfText mUIStartDatumistälteralText1;
        
        private WpfText mUIGespeichertText1;
        #endregion
    }
    
    [GeneratedCode("Coded UI-Test-Generator", "15.0.26208.0")]
    public class UIMainWindowWindow1 : WinWindow
    {
        
        public UIMainWindowWindow1()
        {
            #region Suchkriterien
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MainWindow";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MainWindow");
            #endregion
        }
        
        #region Properties
        public WinButton UISchließenButton
        {
            get
            {
                if ((this.mUISchließenButton == null))
                {
                    this.mUISchließenButton = new WinButton(this);
                    #region Suchkriterien
                    this.mUISchließenButton.SearchProperties[WinButton.PropertyNames.Name] = "Schließen";
                    this.mUISchließenButton.WindowTitles.Add("MainWindow");
                    #endregion
                }
                return this.mUISchließenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISchließenButton;
        #endregion
    }
}
